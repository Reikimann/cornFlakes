{ config, lib, ... }:

with lib;
let
  cfg = config.reiki.modules.shell.zsh;
in
{
  options.reiki.modules.shell.zsh = {
    enable = mkEnableOption "Zsh configuration";
    enableZoxide = mkOption {
      description = "Enables Zoxide integration";
      default = true;
      type = types.bool;
    };
    enableStarship = mkOption {
      description = "Enables Starship integration";
      default = true;
      type = types.bool;
    };
  };

  config = mkIf cfg.enable {
    programs = {
      zsh = {
        enable = true;
        # TODO: Finish converting
        autocd = true;
        defaultKeymap = "viins";

        syntaxHighlighting = {
          enable = true;
        };

        shellAliases = (import ./aliases.nix).myAliases;

        autosuggestion.enable = true;
        enableCompletion = true;

        history = {
          ignoreDups = true;
          save = 512;
          path = "${config.xdg.dataHome}/zsh/zhistory";
        };

        dotDir = ".config/zsh";

        #initExtra = ''
        #  LESS=R
        #  #LESS=iFMRSX
        #  #LESS_TERMCAP_mb="$(printf '%b' '[1;31m')"
        #  #LESS_TERMCAP_md="$(printf '%b' '[1;36m')"
        #  #LESS_TERMCAP_me="$(printf '%b' '[0m')"
        #  #LESS_TERMCAP_so="$(printf '%b' '[01;44;33m')"
        #  #LESS_TERMCAP_se="$(printf '%b' '[0m')"
        #  #LESS_TERMCAP_us="$(printf '%b' '[1;32m')"
        #  #LESS_TERMCAP_ue="$(printf '%b' '[0m')"
        #  # Color man pages.
        #  export LESS_TERMCAP_mb=$'\E[01;31m'
        #  export LESS_TERMCAP_md=$'\E[01;38;5;208m'
        #  export LESS_TERMCAP_me=$'\E[0m'
        #  export LESS_TERMCAP_se=$'\E[0m'
        #  export LESS_TERMCAP_ue=$'\E[0m'
        #  export LESS_TERMCAP_us=$'\E[04;38;5;111m'
        #'';

      };

      # TODO: Use modules and config to check defaultShell
      # Clean-up bash module afterwards
      # This can done in a better way.
      zoxide = {
        enable = cfg.enableZoxide;
        enableZshIntegration = true;
      };

      # TODO: Add my own config from github dotfiles
      starship = {
        enable = cfg.enableStarship;
        enableZshIntegration = true; # Not working: Zsh config not generated by home-manager
        settings = {
          nix_shell = {
            symbol = "ïŒ“ ";
            format = ''([\[$symbol$state( \($name\))\]]($style) )'';
          };
        };
      };
    };
  };
}
